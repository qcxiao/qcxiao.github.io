<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Anaconda使用]]></title>
    <url>%2F2017%2F10%2F31%2FAnaconda%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[python版本管理1234567891011121314151617# 查看帮助conda -h # 基于python3.6版本创建一个名字为python36的环境conda create --name python36 python=3.6 # 激活此环境activate python36 source activate python36 # linux/mac# 再来检查python版本，显示是 3.6python -V # 退出当前环境deactivate python36 # 删除该环境conda remove -n python36 --all# 或者 conda env remove -n python36# 查看所以安装的环境conda info -e ##conda的一些常用命令1234567891011121314151617181920# 查看当前环境下已安装的包conda list# 查看某个指定环境的已安装包conda list -n python34# 查找package信息conda search numpy# 安装packageconda install -n python34 numpy# 如果不用-n指定环境名称，则被安装在当前活跃环境# 也可以通过-c指定通过某个channel安装# 更新packageconda update -n python34 numpy# 删除packageconda remove -n python34 numpy# 更新conda，保持conda最新conda update conda# 更新anacondaconda update anaconda# 更新python，假设当前环境是python 3.4, conda会将python升级为3.4.x系列的当前最新版本conda update python 设置代理镜像123456789# 添加Anaconda的TUNA镜像conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/# TUNA的help中镜像地址加有引号，需要去掉# 设置搜索时显示通道地址conda config --set show_channel_urls yes# 移除某个Anaconda的TUNA镜像conda config --remove channels &apos;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&apos;]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2017%2F10%2F30%2Fpython-regx%2F</url>
    <content type="text"><![CDATA[^表示以特定字符开头，在[]中表示非，在[.]中.和就没有特殊用途了 $表示以特定字符结束 .表示任意字符 *表示前面字符出现任意次 +表示前面字符至少出现一次 ?表示非贪婪匹配；（默认贪婪匹配，从后往前匹配） {}表示前面字符出现的次数 ()用于提取字符串，可以结合group()的用法 []用于限制匹配的字符，即匹配[]中的字符，且在[]内的特殊字符没有特殊含义（可以是数字、字母等区间） \s表示空格（一个空格），\S和\s相反 \w表示：[a-zA-Z0-9_]，\W和\w相反 [\u4E00-\u9FA5]：表示中文汉字 \d表示数字，等价于：[0-9] 具体见以下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869import reline = &apos;haaaaaaahhhh12345&apos;# 正则表达式默认是贪婪的匹配模式,而?就是把模式改为非贪婪模式；因为贪婪匹配是从前向后一直匹配，因此贪婪匹配可以理解为从后向前开始匹配# ()表示提取子串# .表示任意字符regx_str1 = &apos;.*?(h.*?h).*&apos;# 限定：+表示至少出现一次，*表示可以出现任意次regx_str2 = &apos;.*(h.+h).*&apos;# &#123;2&#125;、&#123;2,&#125;、&#123;2,5&#125;具体的限定次数# &#123;2&#125;表示刚好2次# &#123;2,&#125;表示2次及以上# &#123;2,5&#125;表示至少2次，最多5次，这里一定要注意是否贪婪匹配regx_str3 = &apos;.*(h.&#123;5,11&#125;h).*&apos;matchObj = re.match(regx_str1, line)if matchObj: print(matchObj.group(1))matchObj = re.match(regx_str2, line)if matchObj: print(matchObj.group(1))matchObj = re.match(regx_str3, line)if matchObj: print(matchObj.group(1))line = &apos;haaaaha123&apos;# |表示或，同时理解到group的用法regx_str4 = &apos;((ha|haaaaha)123)&apos;matchObj = re.match(regx_str4, line)if matchObj: print(matchObj.group(1)) print(matchObj.group(2))# []表示其中任意一个,[0-9]表示0到9的任意一个的区间，[^1]表示非1，[.*]这样.和*就没有特殊用途了line = &apos;138836666667&apos;regx_str5 = &apos;(1[345][0-9]&#123;9&#125;)&apos;matchObj = re.match(regx_str5, line)if matchObj: print(matchObj.group(1))# \s表示空格；\S表示非\s，即不为空的字符# \w表示[A-Za-z0-9_]，\W表示非\wline = &apos;h h&apos;regx_str6 = &apos;(h\wh)&apos;matchObj = re.match(regx_str6, line)if matchObj: print(matchObj.group(1))regx_str7 = &apos;(h\Wh)&apos;matchObj = re.match(regx_str7, line)if matchObj: print(matchObj.group(1))# [\u4E00-\u9FA5]中文匹配line = &apos;h 哈哈 中h&apos;regx_str8 = &apos;.*([\u4E00-\u9FA5]*)&apos;matchObj = re.match(regx_str8, line)if matchObj: print(matchObj.group(1))# \d表示数字line = &apos;h 哈哈 2018中h&apos;regx_str9 = &apos;.*?(\d+中)&apos;matchObj = re.match(regx_str9, line)if matchObj: print(matchObj.group(1))]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[优秀资源]]></title>
    <url>%2F2017%2F10%2F30%2F%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90%2F</url>
    <content type="text"><![CDATA[hexo的next主题个性化配置教程:https://segmentfault.com/a/1190000009544924 Jodd:http://www.importnew.com/26393.htmlJodd HTTP的使用:https://www.coderknock.com/blog/2016/07/04/JoddHTTP.html Selenium:http://www.cnblogs.com/TankXiao/p/5252754.html 深度优先和广度优先:https://segmentfault.com/a/1190000002685939 清华大学开源软件镜像站：https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ 在线markdown编辑工具：http://markdown.xiaoshujiang.com/]]></content>
      <categories>
        <category>收藏</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Http</tag>
        <tag>网络</tag>
      </tags>
  </entry>
</search>
